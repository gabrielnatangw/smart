# ========================================
# üåê NGINX CONFIGURATION - PRODU√á√ÉO
# ========================================
# Configura√ß√£o otimizada para produ√ß√£o com SSL/TLS

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # ========================================
    # üîß CONFIGURA√á√ïES B√ÅSICAS
    # ========================================
    
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Configura√ß√µes de performance
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Configura√ß√µes de buffer
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;
    
    # ========================================
    # üîí CONFIGURA√á√ïES DE SEGURAN√áA
    # ========================================
    
    # Headers de seguran√ßa
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Ocultar vers√£o do Nginx
    server_tokens off;
    
    # ========================================
    # üìù CONFIGURA√á√ïES DE LOG
    # ========================================
    
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # ========================================
    # ‚ö° CONFIGURA√á√ïES DE PERFORMANCE
    # ========================================
    
    # Compress√£o Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    # Cache de arquivos est√°ticos
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # ========================================
    # üîÑ UPSTREAM BACKEND
    # ========================================
    
    upstream backend {
        server backend-api:3000;
        keepalive 32;
    }
    
    # ========================================
    # üåê SERVER CONFIGURATION
    # ========================================
    
    # Redirecionamento HTTP para HTTPS
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirecionar todo o tr√°fego para HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    # Servidor HTTPS principal
    server {
        listen 443 ssl http2;
        server_name _;
        
        # ========================================
        # üîê CONFIGURA√á√ïES SSL/TLS
        # ========================================
        
        # Certificados SSL (configure seus pr√≥prios)
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Configura√ß√µes SSL modernas
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # ========================================
        # üöÄ PROXY PARA BACKEND
        # ========================================
        
        location / {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # ========================================
        # üìä MONITORAMENTO
        # ========================================
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Status do Nginx
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # ========================================
        # üìÅ ARQUIVOS EST√ÅTICOS
        # ========================================
        
        # Servir arquivos est√°ticos diretamente
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://backend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options nosniff;
        }
        
        # ========================================
        # üîí PROTE√á√ïES ADICIONAIS
        # ========================================
        
        # Bloquear acesso a arquivos sens√≠veis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Bloquear acesso a arquivos de configura√ß√£o
        location ~* \.(env|log|sql|bak|backup)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Rate limiting
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
    
    # ========================================
    # üö¶ RATE LIMITING
    # ========================================
    
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    
    # ========================================
    # üìä MONITORAMENTO AVAN√áADO
    # ========================================
    
    # M√©tricas para Prometheus
    server {
        listen 8080;
        server_name _;
        
        location /metrics {
            stub_status on;
            access_log off;
        }
    }
}
