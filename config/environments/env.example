# ========================================
# üåç VARI√ÅVEIS DE AMBIENTE - Backend API
# ========================================
# Copie este arquivo para .env e configure suas vari√°veis
# cp env.example .env

# ========================================
# üîß CONFIGURA√á√ïES B√ÅSICAS
# ========================================
NODE_ENV=production
PORT=3000
HOST=0.0.0.0

# ========================================
# üóÑÔ∏è BANCO DE DADOS
# ========================================
DATABASE_URL=postgresql://postgres:postgres123@localhost:5432/backend_db
DATABASE_URL_DEV=postgresql://postgres:postgres123@localhost:5432/backend_db_dev

# ========================================
# üîê AUTENTICA√á√ÉO JWT
# ========================================
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
JWT_REFRESH_SECRET=your-super-secret-refresh-key-change-this-in-production
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# ========================================
# üî¥ REDIS CACHE
# ========================================
REDIS_URL=redis://localhost:6379
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# ========================================
# üìß CONFIGURA√á√ïES SMTP
# ========================================
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-password
SMTP_FROM=noreply@yourcompany.com
SMTP_SECURE=false

# ========================================
# üì° CONFIGURA√á√ïES MQTT (HOST ANTIGO)
# ========================================
# MQTT usando host antigo
MQTT_HOST=mqtt://groupwork-smart.com
MQTT_PORT=1883
MQTT_PROTOCOL=mqtt
MQTT_USERNAME=
MQTT_PASSWORD=
MQTT_CLIENT_ID=backend-api-${NODE_ENV:-local}
MQTT_KEEPALIVE=60
MQTT_RECONNECT_PERIOD=1000
MQTT_CONNECT_TIMEOUT=10000

# ========================================
# üîí CONFIGURA√á√ïES MQTTS (MQTT Seguro - HOST NOVO)
# ========================================
# MQTTS usando host novo com credenciais espec√≠ficas
MQTTS_HOST=35.226.220.9
MQTTS_PORT=8883
MQTTS_USERNAME=gwsmarttls
MQTTS_PASSWORD=5m@rt8r0k3r
MQTTS_CLIENT_ID=backend-api-mqtts-${NODE_ENV:-local}
MQTTS_KEEPALIVE=60
MQTTS_RECONNECT_PERIOD=1000
MQTTS_CONNECT_TIMEOUT=10000
MQTTS_REJECT_UNAUTHORIZED=true
MQTTS_CA_CERT_PATH=src/config/ca.crt

# ========================================
# üîí CONFIGURA√á√ïES DE SEGURAN√áA
# ========================================
BCRYPT_ROUNDS=12
CORS_ORIGIN=http://localhost:3000,http://localhost:3001
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# ========================================
# ‚òÅÔ∏è GOOGLE CLOUD SQL (OPCIONAL)
# ========================================
# Habilitar conex√£o com Google Cloud SQL
USE_CLOUD_SQL=false
# Nome da inst√¢ncia Cloud SQL (formato: projeto:regi√£o:inst√¢ncia)
INSTANCE_CONNECTION_NAME=projeto:regiao:instancia

# ========================================
# üìä CONFIGURA√á√ïES DE LOGGING
# ========================================
LOG_LEVEL=info
LOG_FORMAT=json
LOG_FILE_PATH=./logs/app.log
LOG_MAX_SIZE=20m
LOG_MAX_FILES=14

# ========================================
# üåê CONFIGURA√á√ïES DE REDE
# ========================================
SOCKET_CORS_ORIGIN=http://localhost:3000
SOCKET_PING_TIMEOUT=60000
SOCKET_PING_INTERVAL=25000

# ========================================
# üîç CONFIGURA√á√ïES DE MONITORAMENTO
# ========================================
HEALTH_CHECK_INTERVAL=30000
HEALTH_CHECK_TIMEOUT=5000
HEALTH_CHECK_RETRIES=3

# ========================================
# üìÅ CONFIGURA√á√ïES DE ARQUIVOS
# ========================================
UPLOAD_MAX_SIZE=10mb
UPLOAD_PATH=./uploads
TEMP_PATH=./temp

# ========================================
# üß™ CONFIGURA√á√ïES DE TESTE
# ========================================
TEST_DATABASE_URL=postgresql://postgres:postgres123@localhost:5432/backend_db_test
TEST_REDIS_URL=redis://localhost:6379/1
